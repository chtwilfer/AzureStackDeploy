{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmname": {
            "type": "string"
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "allowedValues": [
                "Standard_A1",
                "Standard_A5"
            ]
        },
        "username": {
            "type": "string",
            "defaultValue": "knazureadmin"
        },
        "pwd": {
            "type": "securestring"
        },
        "vnetname": {
            "type": "string",
            "defaultValue": "knazurevnet100"
        },
      "storageblobname": {
        "type": "string",
        "defaultValue": "knazstorage100"
      },
      "storageaccountcontainername": {
        "type": "string",
        "defaultValue": "vhds"
      },
      "storageendpoint": {
        "type": "string",
        "defaultValue": "blob.azurestack.local",
        "allowedValues": [
          "blob.azurestack.local",
          "blob.core.windows.net"
        ],
        "metadata": {
          "Description": "Use blob.azurestack.local for MAS TP1 - and blob.core.windows.net for Azure"
        }
      },
        "location": {
            "type": "string",
          "defaultValue": "local",
          "allowedValues": [
            "local",
            "west europe",
            "north europe",
            "west us"
          ]
        },
        "dscurl": {
            "type": "string",
            "defaultValue": "https://github.com/krnese/AzureDeploy/raw/master/DSCExample/azureweb.ps1.zip"
        },
        "configurationfunction": {
            "type": "string",
            "defaultValue": "azureweb.ps1\\mywebserver"
        }
    },
  "variables": {
    "apiVersion": {
      "Compute": {
        "VirtualMachines": "2015-06-15",
        "Extensions": "2015-06-15"
      },
      "Storage": {
        "storageAccounts": "2015-06-15"
      },
      "network": {
        "virtualnetworks": "2015-06-15",
        "publicIPaddress": "2015-06-15",
        "networkinterface": "2015-06-15"
      }
    },
    "virtualNetworkName": "[parameters('vnetname')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualnetworks', variables('virtualnetworkname'))]",
    "subnetname": "ccsubnet01",
    "addressprefix": "192.168.0.0/16",
    "subnetPrefix": "192.168.0.0/24",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/', variables('subnetname'))]",
    "nicname": "knnic20",
    "publicnicname": "knpub202test",
    "imagepublisher": "MicrosoftWindowsServer",
    "imageoffer": "WindowsServer",
    "ipallocation": "Dynamic",
    "storagetype": "Standard_LRS",
    "imagesku": "2012-R2-Datacenter",
    "extensionname": "dscExtension"
  },
    "resources": [
        {
            "apiVersion": "[variables('apiVersion').Storage.storageaccounts]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageblobname')]",
            "location": "[parameters('location')]",
            "properties": {
                "accountType": "[variables('storagetype')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion').network.publicIPaddress]",
            "type": "Microsoft.Network/PublicIPAddresses",
            "name": "[variables('publicnicname')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPallocationmethod": "[variables('ipallocation')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion').network.virtualnetworks]",
            "type": "Microsoft.Network/virtualnetworks",
            "name": "[parameters('vnetname')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressprefixes": [
                        "[variables('addressprefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetname')]",
                        "properties": {
                            "addressprefix": "[variables('subnetprefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion').network.networkinterface]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicname')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicnicname'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualnetworkname'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicnicname'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion').compute.virtualmachines]",
            "type": "Microsoft.Compute/VirtualMachines",
            "name": "[parameters('vmname')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/StorageAccounts/', variables('storagename'))]",
                "[concat('Microsoft.Network/networkinterfaces/', variables('nicname'))]"
            ],
            "properties": {
                "hardwareprofile": {
                    "vmsize": "[parameters('vmsize')]"
                },
                "osprofile": {
                    "computername": "[parameters('vmname')]",
                    "adminusername": "[parameters('username')]",
                    "adminpassword": "[parameters('pwd')]"
                },
                "storageprofile": {
                    "imageReference": {
                        "publisher": "[variables('imagepublisher')]",
                        "offer": "[variables('imageoffer')]",
                        "version": "latest",
                        "sku": "[variables('imagesku')]"
                    },
                    "osdisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://', parameters('storageblobname'),'.', parameters('StorageEndpoint'), '/',  parameters('storageaccountcontainername'), '/', 'osdisk.vhd')]"
                        },
                        "caching": "readwrite",
                        "createoption": "FromImage"
                    }
                },
                "networkprofile": {
                    "networkinterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkinterfaces', variables('nicname'))]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion').compute.extensions]",
            "type": "Microsoft.Compute/virtualmachines/extensions",
            "name": "[concat(parameters('vmname'), '/', variables('extensionname'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.compute/virtualmachines/', parameters('vmname'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerversion": "2.7",
                "autoUpgradeMinorVersion": "true",
                "settings": {
                    "ModulesUrl": "[parameters('dscurl')]",
                    "configurationfunction": "[parameters('configurationfunction')]",
                    "sastoken": "",
                    "properties": {
                        "servername": "[parameters('vmname')]"
                    }
                }
            }
        }
    ],
    "outputs": {
    }
}
      
